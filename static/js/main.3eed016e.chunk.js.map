{"version":3,"sources":["assets/brain.png","components/navigation/Navigation.js","components/Logo/Logo.js","components/ImageLinkForm/ImageLinkForm.js","components/Rank/Rank.js","components/FaceRecognition/FaceRecognition.js","components/Spinner/Spinner.js","components/SignIn/SignIn.js","components/Register/Register.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navigation","onRouteChange","isSignedIn","style","display","justifyContent","onClick","className","Logo","options","max","height","width","alt","paddingTop","src","brain","ImageLinkForm","onInputChange","onButtonSubmit","type","onChange","Rank","name","entries","FaceRecognition","imageUrl","box","console","log","loading","id","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","Spinner","SignIn","props","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","isSigningIn","state","fetch","method","headers","body","JSON","stringify","email","password","then","response","json","user","loadUser","catch","err","submitSignInOffline","setTimeout","joined","this","alignItems","htmlFor","React","Component","Register","onNameChange","registerName","registerEmail","registerPassword","onSubmitRegister","isRegistring","submitRegisterOffline","app","Clarifai","App","apiKey","particlesOptions","particles","number","density","enable","value_area","initialState","input","route","isFetchingImage","data","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","a","imageResponse","count","Object","assign","onHandleSubmitImage","handleImageSearch","imageResp","models","predict","FACE_DETECT_MODEL","params","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3eed016e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/brain.3f726e51.png\";","import React from \"react\";\n\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\n  if (isSignedIn) {\n    return (\n      <nav style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n        <p\n          onClick={() => onRouteChange(\"signout\")}\n          className=\"f3 link dim black underline ba3 pr3 pointer\"\n        >\n          Sign Out\n        </p>\n      </nav>\n    );\n  } else {\n    return (\n      <nav style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n        <p\n          onClick={() => onRouteChange(\"signin\")}\n          className=\"f3 link dim black underline ba3 pointer pa2\"\n        >\n          Sign In\n        </p>\n        <p\n          onClick={() => onRouteChange(\"register\")}\n          className=\"f3 link dim black underline ba3 pointer pa2\"\n        >\n          Register\n        </p>\n      </nav>\n    );\n  }\n};\n\nexport default Navigation;\n","import React from \"react\";\nimport Tilt from \"react-tilt\";\nimport \"./Logo.css\";\nimport brain from \"../../assets/brain.png\";\n\nconst Logo = () => {\n  return (\n    <div className=\"ma4 mt0 pa3\">\n      <Tilt\n        className=\"Tilt br2 shadow-2\"\n        options={{ max: 55 }}\n        style={{ height: 150, width: 150 }}\n      >\n        <div className=\"Tilt-inner pa3\">\n          <img alt=\"\" style={{ paddingTop: \"5px\" }} src={brain} />\n        </div>\n      </Tilt>\n    </div>\n  );\n};\n\nexport default Logo;\n","import React from 'react';\n\nconst ImageLinkForm = ({onInputChange,onButtonSubmit}) => {\n  return (\n    <div>\n    \t<p className='f3'>\n    \t\t{'This Magic Brain will detect any faces in your picture. Give it a try'}\n    \t</p>\n    \t<div className='center'>\n    \t\t<div className ='pa4 br3 shadow-5 form center'>\n    \t\t<input className='f4 pa2 w-70 center' type=\"text\" onChange={onInputChange}/>\n    \t\t<button \n            onClick = {onButtonSubmit}\n            className='w-30 grow f4 link ph3 pv2 dib white bg-light-purple'>Detect</button>\n    \t\t</div>\n    \t</div>\n    </div>\n  );\n}\n\nexport default ImageLinkForm\n","import React from 'react';\n\nconst Rank = ({name, entries}) => {\n  return (\n    <div>\n    \t<div className='white f3'>\n    \t\t{`${name} , your current entry count is...`}\n    \t</div>\n    \t<div className='white f3'>\n    \t\t{entries}\n    \t</div>\n    </div>\n  );\n}\n\nexport default Rank\n","import React from \"react\";\nimport \"./FaceRecognition.css\";\n\nconst FaceRecognition = ({ imageUrl, box }) => {\n  console.log(box);\n  return (\n    <div className=\"center ma\">\n      <div className=\"absolute mt2\">\n        <img\n          loading=\"lazy\"\n          id=\"inputimage\"\n          alt=\"\"\n          src={imageUrl}\n          width=\"500px\"\n          height=\"auto\"\n        />\n        <div\n          className=\"bounding-box\"\n          style={{\n            top: box.topRow ? box.topRow : 0,\n            right: box.rightCol ? box.rightCol : 0,\n            bottom: box.bottomRow ? box.bottomRow : 0,\n            left: box.leftCol ? box.leftCol : 0,\n          }}\n        ></div>\n      </div>\n    </div>\n  );\n};\n\nexport default FaceRecognition;\n","import React from \"react\";\nimport \"./Spinner.css\";\n\nconst Spinner = () => {\n  return (\n    <div className=\"lds-ring\">\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  );\n};\n\nexport default Spinner;\n","import React from \"react\";\nimport Spinner from \"../Spinner/Spinner\";\nclass SignIn extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      signInEmail: \"\",\n      signInPassword: \"\",\n      isSigningIn: false,\n    };\n  }\n\n  onEmailChange = (event) => {\n    this.setState({ signInEmail: event.target.value });\n  };\n\n  onPasswordChange = (event) => {\n    this.setState({ signInPassword: event.target.value });\n  };\n\n  onSubmitSignIn = () => {\n    this.setState({ isSigningIn: true });\n    if (!this.state.isSigningIn) {\n      fetch(\"https://floating-ravine-20611.herokuapp.com/signin\", {\n        method: \"post\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          email: this.state.signInEmail,\n          password: this.state.signInPassword,\n        }),\n      })\n        .then((response) => response.json())\n        .then((user) => {\n          if (user.id) {\n            this.props.loadUser(user);\n            this.props.onRouteChange(\"home\");\n          }\n          this.setState({ isSigningIn: false });\n        })\n        .catch((err) => console.log(err));\n    }\n  };\n\n  submitSignInOffline = () => {\n    this.setState({ isSigningIn: true });\n    setTimeout(() => {\n      this.props.loadUser({\n        id: \"1\",\n        name: \"User\",\n        email: this.props.signInEmail,\n        entries: 0,\n        joined: \"\",\n      });\n      this.props.onRouteChange(\"home\");\n      this.setState({ isSigningIn: false });\n    }, 1000);\n  };\n\n  render() {\n    const { onRouteChange } = this.props;\n    return this.state.isSigningIn ? (\n      <div\n        className=\"flex-grow-1\"\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        <Spinner />\n      </div>\n    ) : (\n      <article className=\"menu-background br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\n        <main className=\"pa4\">\n          <div className=\"measure\">\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n              <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">\n                  Email:\n                </label>\n                <input\n                  onChange={this.onEmailChange}\n                  className=\"pa2 input-reset ba bg-black hover-bg-black hover-white w-100 white\"\n                  type=\"email\"\n                  name=\"email-address\"\n                  id=\"email-address\"\n                />\n              </div>\n              <div className=\"mv3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">\n                  Password:\n                </label>\n                <input\n                  onChange={this.onPasswordChange}\n                  className=\"b pa2 input-reset ba bg-black hover-bg-black hover-white w-100 white\"\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                />\n              </div>\n            </fieldset>\n            <div className=\"\">\n              <input\n                onClick={this.submitSignInOffline}\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib white\"\n                type=\"submit\"\n                value=\"Sign in\"\n              />\n            </div>\n            <div className=\"lh-copy mt3\">\n              <p\n                onClick={() => onRouteChange(\"register\")}\n                className=\"pointer f6 link dim  db\"\n              >\n                Register\n              </p>\n            </div>\n          </div>\n        </main>\n      </article>\n    );\n  }\n}\nexport default SignIn;\n","import React from \"react\";\nimport Spinner from \"../Spinner/Spinner\";\nclass Register extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      registerName: \"\",\n      registerEmail: \"\",\n      registerPassword: \"\",\n      isRegistring: false,\n    };\n  }\n\n  onNameChange = (event) => {\n    this.setState({ registerName: event.target.value });\n  };\n\n  onEmailChange = (event) => {\n    this.setState({ registerEmail: event.target.value });\n  };\n\n  onPasswordChange = (event) => {\n    this.setState({ registerPassword: event.target.value });\n  };\n\n  onSubmitRegister = () => {\n    this.setState({ isRegistring: true });\n    if (!this.state.isRegistring) {\n      fetch(\"https://floating-ravine-20611.herokuapp.com/register\", {\n        method: \"post\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          name: this.state.registerName,\n          email: this.state.registerEmail,\n          password: this.state.registerPassword,\n        }),\n      })\n        .then((response) => response.json())\n        .then((user) => {\n          if (user.id) {\n            this.props.loadUser(user);\n            this.props.onRouteChange(\"home\");\n          }\n          this.setState({ isRegistring: false });\n        });\n    }\n  };\n\n  submitRegisterOffline = () => {\n    this.setState({ isRegistring: true });\n    setTimeout(() => {\n      this.props.loadUser({\n        id: \"1\",\n        name: \"User\",\n        email: this.props.registerEmail,\n        entries: 0,\n        joined: \"\",\n      });\n      this.props.onRouteChange(\"home\");\n      this.setState({ isRegistring: false });\n    }, 1000);\n  };\n\n  render() {\n    const { onRouteChange } = this.props;\n    return this.state.isRegistring ? (\n      <div\n        className=\"flex-grow-1\"\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        <Spinner />\n      </div>\n    ) : (\n      <article className=\"menu-background br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\n        <main className=\"pa4\">\n          <div className=\"measure\">\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n              <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">\n                  Name:\n                </label>\n                <input\n                  onChange={this.onNameChange}\n                  className=\"pa2 input-reset ba bg-black hover-bg-black hover-white w-100 white\"\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"name\"\n                />\n              </div>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">\n                  Email:\n                </label>\n                <input\n                  onChange={this.onEmailChange}\n                  className=\"pa2 input-reset ba bg-black hover-bg-black hover-white w-100 white\"\n                  type=\"email\"\n                  name=\"email-address\"\n                  id=\"email-address\"\n                />\n              </div>\n              <div className=\"mv3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">\n                  Password:\n                </label>\n                <input\n                  onChange={this.onPasswordChange}\n                  className=\"b pa2 input-reset ba bg-black hover-bg-black hover-white w-100 white\"\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                />\n              </div>\n            </fieldset>\n            <div className=\"\">\n              <input\n                onClick={this.submitRegisterOffline}\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib white\"\n                type=\"submit\"\n                value=\"Register\"\n              />\n            </div>\n            <div className=\"lh-copy mt3\">\n              <p\n                onClick={() => onRouteChange(\"signin\")}\n                className=\"pointer f6 link dim  db\"\n              >\n                Sign In\n              </p>\n            </div>\n            <div className=\"lh-copy mt3\"></div>\n          </div>\n        </main>\n      </article>\n    );\n  }\n}\nexport default Register;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Navigation from \"./components/navigation/Navigation\";\nimport Logo from \"./components/Logo/Logo\";\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\nimport Rank from \"./components/Rank/Rank\";\nimport FaceRecognition from \"./components/FaceRecognition/FaceRecognition\";\nimport Particles from \"react-particles-js\";\nimport SignIn from \"./components/SignIn/SignIn\";\nimport Register from \"./components/Register/Register\";\nimport Spinner from \"./components/Spinner/Spinner\";\nimport Clarifai from \"clarifai\";\n\nconst app = new Clarifai.App({\n  apiKey: \"65a3206fd009407f9acdd7fdeabdc162\",\n});\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 147,\n      density: {\n        enable: true,\n        value_area: 800,\n      },\n    },\n  },\n};\n\nconst initialState = {\n  input: \"\",\n  imageUrl: \"\",\n  box: {},\n  route: \"signin\",\n  isSignedIn: false,\n  isFetchingImage: false,\n  user: {\n    id: \"\",\n    name: \"\",\n    email: \"\",\n    entries: 0,\n    joined: \"\",\n  },\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = initialState;\n  }\n\n  loadUser = (data) => {\n    this.setState({\n      user: {\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        entries: data.entries,\n        joined: data.joined,\n      },\n    });\n  };\n\n  calculateFaceLocation = (data) => {\n    console.log(data);\n    const clarifaiFace =\n      data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById(\"inputimage\");\n    if (image && image.height > 0) {\n      console.log(image);\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height,\n      };\n    } else {\n      setTimeout(() => {\n        this.displayFaceBox(this.calculateFaceLocation(data));\n      }, 1000);\n      return {};\n    }\n  };\n\n  displayFaceBox = (box) => {\n    this.setState({ box: box });\n  };\n\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value });\n  };\n\n  onButtonSubmit = async () => {\n    try {\n      if (!this.state.isFetchingImage) {\n        this.setState({ imageUrl: this.state.input });\n        this.setState({ isFetchingImage: true });\n        const response = await fetch(\n          \"https://floating-ravine-20611.herokuapp.com/imageurl\",\n          {\n            method: \"post\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n              input: this.state.input,\n            }),\n          }\n        );\n        const data = await response.json();\n\n        if (data !== \"unable to work with API\") {\n          const imageResponse = await fetch(\n            \"https://floating-ravine-20611.herokuapp.com/image\",\n            {\n              method: \"put\",\n              headers: { \"Content-Type\": \"application/json\" },\n              body: JSON.stringify({\n                id: this.state.user.id,\n              }),\n            }\n          );\n          const count = await imageResponse.json();\n          this.setState(Object.assign(this.state.user, { entries: count }));\n          this.setState({ isFetchingImage: false });\n          console.log(data);\n        } else {\n          this.setState({ isFetchingImage: false });\n        }\n        return data;\n        // .then((nextResponse) => {\n        //   console.log(this.state);\n        //   console.log(nextResponse);\n        // })\n        // .catch((err) => console.log(err));\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  onHandleSubmitImage = async () => {\n    try {\n      this.setState({ isFetchingImage: true });\n      if (!this.state.isFetchingImage) {\n        const imageResp = await this.handleImageSearch();\n        console.log(this.state);\n        console.log(imageResp);\n        this.displayFaceBox(this.calculateFaceLocation(imageResp));\n      }\n    } catch (err) {\n      console.log(err);\n    } finally {\n      this.setState({ isFetchingImage: false });\n    }\n  };\n\n  onRouteChange = (route) => {\n    if (route === \"signout\") {\n      this.setState(initialState);\n    } else if (route === \"home\") {\n      this.setState({ isSignedIn: true });\n    }\n    this.setState({ route: route });\n  };\n\n  handleImageSearch = async () => {\n    try {\n      this.setState({ imageUrl: this.state.input });\n      const data = await app.models.predict(\n        Clarifai.FACE_DETECT_MODEL,\n        this.state.input\n      );\n      console.log(data);\n      if (data) {\n        this.setState(\n          Object.assign(this.state.user, {\n            entries: this.state.user.entries + 1,\n          })\n        );\n        return data;\n      }\n    } catch (err) {\n      console.log(err);\n      this.setState({ isFetchingImage: false });\n    }\n  };\n\n  render() {\n    const { isSignedIn, imageUrl, route, box } = this.state;\n    return (\n      <div className=\"App\">\n        <Particles className=\"particles\" params={particlesOptions} />\n        <Navigation\n          isSignedIn={isSignedIn}\n          onRouteChange={this.onRouteChange}\n        />\n        {route === \"home\" ? (\n          <div>\n            <Logo />\n            <Rank\n              name={this.state.user.name}\n              entries={this.state.user.entries}\n            />\n            <ImageLinkForm\n              onInputChange={this.onInputChange}\n              onButtonSubmit={this.onHandleSubmitImage}\n            />\n            {this.state.isFetchingImage ? (\n              <div\n                style={{\n                  height: \"200px\",\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <Spinner />\n              </div>\n            ) : (\n              <FaceRecognition box={box} imageUrl={imageUrl} />\n            )}\n          </div>\n        ) : route === \"signin\" ? (\n          <SignIn loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n        ) : (\n          <Register\n            loadUser={this.loadUser}\n            onRouteChange={this.onRouteChange}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'tachyons'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}